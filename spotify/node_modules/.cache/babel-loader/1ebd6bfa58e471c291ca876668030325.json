{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/spotify/src/App.js\";\nimport React, { Component } from 'react';\nimport Artist from './Artist';\nimport './App.css';\nimport './Artist.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      artists: []\n    };\n    _this.compare = _this.compare.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var artists = this.state.artists.artists;\n      console.log(artists);\n      artists.sort(this.compare);\n      console.log(artists);\n      this.setState({\n        artists: {\n          artists: artists\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var BASE_URL = 'https://api.spotify.com/v1/artists?ids=';\n      var ids = '0oSGxfWSnnOXhD2fKuz2Gy,3dBVyJ7JuOMt4GE9607Qin,3TVXtAsR1Inumwj472S9r4,3sgAdiPhuvZrC1Di13TVbO,3jfKIjYYnAfdUW40Uragnd';\n      var URL = BASE_URL + ids; //spotify:artist:3sgAdiPhuvZrC1Di13TVbO spotify:artist:3jfKIjYYnAfdUW40Uragnd\n\n      var access_token = 'BQCItsUG__vmvaOR5OZmgCm9JxEZ0ybWWIymeIJ0cHFiPPQbHeXnwJHS33Svbp5zrba4IRyTXKeYGMJWQI5Gq85yhuZa6MRNPIj8JbKQF4bxG9-yOFpQ6TTzeqgWOQ0abIjJLT8Tp-LdbsXleGsjCyIqEpATtWqQdbCpfHBxpN_9JFjX2FK2fetC';\n      var myOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + access_token\n        },\n        mode: 'cors',\n        cache: 'default'\n      };\n      fetch(URL, myOptions).then(function (res) {\n        return res.json();\n      }).then(function (artists) {\n        return _this2.setState({\n          artists: artists.artists\n        });\n      }).then(function () {\n        return console.log(_this2.state.artists);\n      });\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(a, b) {\n      var followersA = a.followers.total;\n      var followersB = b.followers.total;\n      var comparison = 0;\n\n      if (followersA > followersB) {\n        comparison = 1;\n      } else if (followersA < followersB) {\n        comparison = -1;\n      }\n\n      return comparison * -1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var artists;\n\n      if (this.state.artists !== 0) {\n        //artists.artists.sort(this.compare)\n        artists = this.state.artists.artists.map(function (artist) {\n          return React.createElement(Artist, {\n            name: artist.name,\n            image: artist.images[artist.images.length - 1].url,\n            popularity: artist.popularity,\n            followers: artist.followers.total,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, artists);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/workspace/spotify/src/App.js"],"names":["React","Component","Artist","App","props","state","artists","compare","bind","console","log","sort","setState","BASE_URL","ids","URL","access_token","myOptions","method","headers","mode","cache","fetch","then","res","json","a","b","followersA","followers","total","followersB","comparison","map","artist","name","images","length","url","popularity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Artist from './Artist'\nimport './App.css';\nimport './Artist.css'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    \n    this.state ={\n      artists: []\n  \n}\nthis.compare = this.compare.bind(this)\n}\n    \n  \n    componentWillMount(){\n      const artists = this.state.artists.artists\n      console.log(artists)\n      artists.sort(this.compare)\n      console.log(artists)\n      this.setState({artists:{artists}})\n    }\n    componentDidMount(){\n    const BASE_URL = 'https://api.spotify.com/v1/artists?ids=';\n    const ids = '0oSGxfWSnnOXhD2fKuz2Gy,3dBVyJ7JuOMt4GE9607Qin,3TVXtAsR1Inumwj472S9r4,3sgAdiPhuvZrC1Di13TVbO,3jfKIjYYnAfdUW40Uragnd';\n    const URL = BASE_URL+ids;\n    //spotify:artist:3sgAdiPhuvZrC1Di13TVbO spotify:artist:3jfKIjYYnAfdUW40Uragnd\n    const access_token ='BQCItsUG__vmvaOR5OZmgCm9JxEZ0ybWWIymeIJ0cHFiPPQbHeXnwJHS33Svbp5zrba4IRyTXKeYGMJWQI5Gq85yhuZa6MRNPIj8JbKQF4bxG9-yOFpQ6TTzeqgWOQ0abIjJLT8Tp-LdbsXleGsjCyIqEpATtWqQdbCpfHBxpN_9JFjX2FK2fetC';\n    \n    const myOptions = {\n      method: 'GET',\n      headers : {\n        'Authorization': 'Bearer '+access_token\n      },\n      mode: 'cors',\n      cache: 'default'\n    }\n    \n    \n    fetch(URL, myOptions)\n    .then(res => res.json())\n    .then(artists => this.setState({artists: artists.artists}))\n    .then(() => console.log(this.state.artists))\n     }\n     compare(a,b){\n       const followersA = a.followers.total;\n       const followersB = b.followers.total;\n       let comparison = 0;\n        if(followersA>followersB){\n          comparison = 1;\n        } else if(followersA<followersB){\n          comparison = -1;\n        }\n        return comparison*-1\n     }\n      \n  render() {\n    let artists;\n    if(this.state.artists!==0){\n      //artists.artists.sort(this.compare)\n      artists = this.state.artists.artists.map(artist =>(\n        <Artist \n        name = {artist.name}\n        image = {artist.images[artist.images.length-1].url}\n        popularity = {artist.popularity}\n        followers = {artist.followers.total}\n        />\n        ))\n        \n    }\n    return (\n      <div className='chart'>\n        {artists}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}