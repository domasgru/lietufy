{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/spotify/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/spotify/src/App.js\";\nimport React, { Component } from 'react';\nimport Artist from './Artist';\nimport './App.css';\nimport './Artist.css';\nimport ids from './AllLithuanianArtists';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      artists: {\n        main: [],\n        additional: []\n      },\n      accessToken: [],\n      uploadedData: false\n    };\n    _this.compare = _this.compare.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getArtistInfo = _this.getArtistInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //componentWillMount(){\n  //}\n\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var BASE_URL = 'https://api.spotify.com/v1/artists?ids=';\n      var URL = BASE_URL + ids; //spotify:artist:3sgAdiPhuvZrC1Di13TVbO spotify:artist:3jfKIjYYnAfdUW40Uragnd\n      //const access_token ='BQBfciHdxVpucrCXmmfz3GzTmqcMSSfx0IQg8Z_HlbG4jeXkiKGQZ5qtfLuDOO7AlBnEXvQ9rQR3j-LjaFpWzVz8JOMK90AOum1Y_W_iGyJjBj_ZVjth75JIEPVOCRFIGvMh4MsEsMV6LYv6E2me36O5PiXyGBmoqxBzGLYAU2PD4aSgRph7I5C6';\n\n      var myOptions; //   method: 'GET',\n      //   headers : {\n      //     'Authorization': 'Bearer'+this.state.accessToken.accessToken\n      //   },\n      //   mode: 'cors',\n      //   cache: 'default'\n      // }\n\n      fetch('/api/todos').then(function (res) {\n        return res.json();\n      }) //.then(res=>console.log(res))\n      .then(function (accessToken) {\n        return _this2.setState({\n          accessToken: accessToken\n        });\n      }) //.then(()=>console.log(this.state.accessToken))\n      .then(function () {\n        return myOptions = {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + _this2.state.accessToken.accessToken\n          },\n          mode: 'cors',\n          cache: 'default'\n        };\n      }).then(function () {\n        return console.log(myOptions);\n      }).then(function () {\n        return fetch(URL, myOptions);\n      }) //fetch(URL, myOptions)\n      .then(function (res) {\n        return res.json();\n      }) //.then(bug => console.log(bug))\n      .then(function (artists) {\n        return artists.artists.sort(_this2.compare);\n      }) //.then(artists => this.setState({artists: {main: artists}, additional:[]}))\n      .then(function (artists) {\n        var baseUrl1 = 'https://api.spotify.com/v1/artists/';\n        var baseUrl2 = '/top-tracks?country=LT';\n        var myOptions = {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + _this2.state.accessToken.accessToken\n          },\n          mode: 'cors',\n          cache: 'default'\n        };\n\n        for (var i = 0; i < artists.length; i++) {\n          //console.log(this.state.accessToken.accessToken)\n          var url = baseUrl1 + artists[i].id + baseUrl2;\n          var num = 0;\n          fetch(url, myOptions) //.then((res)=>console.log(res))\n          .then(function (res) {\n            return res.json();\n          }).then(function (res) {\n            //console.log(res.tracks.length)\n            //*\n            artists[num].popularSong = [];\n            artists[num].albumLink = [];\n            artists[num].releaseDate = [];\n            artists[num].previewSong = [];\n            artists[num].popularityOfSong = [];\n            artists[num].albumImage = [];\n\n            if (res.tracks.length > 2) {\n              for (var i = 0; i < 3; i++) {\n                artists[num].popularSong[i] = res.tracks[i].name;\n                artists[num].albumLink[i] = res.tracks[i].album.external_urls.spotify;\n                artists[num].releaseDate[i] = res.tracks[i].album.release_date;\n                artists[num].previewSong[i] = res.tracks[i].preview_url;\n                artists[num].popularityOfSong[i] = res.tracks[i].popularity;\n                artists[num].albumImage[i] = res.tracks[i].album.images[0];\n              }\n            } else {\n              artists[num].popularSong[0] = res.tracks[0].name;\n              artists[num].albumLink[0] = res.tracks[0].album.external_urls.spotify;\n              artists[num].releaseDate[0] = res.tracks[0].album.release_date;\n              artists[num].previewSong[0] = res.tracks[0].preview_url;\n              artists[num].popularityOfSong[0] = res.tracks[0].popularity;\n              artists[num].albumImage[0] = res.tracks[0].album.images[0];\n            } //this.setState({artists:artists})\n            //*\n\n          } //this.state.artists[num].popularSong = res.tracks[0].name\n          ).then(function () {\n            return num++;\n          }); //.then(()=> console.log(this.state.artists[num]))\n          //.then(()=> console.log(this.state.artists))\n        }\n\n        return artists;\n      }).then(function () {\n        return console.log('comp did nioybt' + _this2.state.artists.main);\n      }).then(function () {\n        return _this2.getArtistInfo();\n      }).then(function (artists) {\n        return _this2.setState({\n          artists: artists\n        });\n      }); //.then(artists=>console.log(this.state.artists))\n      //.then(artists=>this.setState({artists:artists}))\n      //.then(()=>console.log(this.state.artists))\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(a, b) {\n      var followersA = a.followers.total;\n      var followersB = b.followers.total;\n      var comparison = 0;\n\n      if (followersA > followersB) {\n        comparison = 1;\n      } else if (followersA < followersB) {\n        comparison = -1;\n      }\n\n      return comparison * -1;\n    }\n  }, {\n    key: \"getArtistInfo\",\n    value: function getArtistInfo() {\n      var baseUrl1 = 'https://api.spotify.com/v1/artists/';\n      var baseUrl2 = '/top-tracks?country=LT';\n      var myOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + this.state.accessToken.accessToken\n        },\n        mode: 'cors',\n        cache: 'default'\n      };\n      var artists = this.state.artists;\n\n      for (var i = 0; i < this.state.artists.length; i++) {\n        //console.log(this.state.accessToken.accessToken)\n        var url = baseUrl1 + this.state.artists[i].id + baseUrl2;\n        var num = 0;\n        fetch(url, myOptions) //.then((res)=>console.log(res))\n        .then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          //console.log(res.tracks.length)\n          //*\n          artists[num].popularSong = [];\n          artists[num].albumLink = [];\n          artists[num].releaseDate = [];\n          artists[num].previewSong = [];\n          artists[num].popularityOfSong = [];\n          artists[num].albumImage = [];\n\n          if (res.tracks.length > 2) {\n            for (var i = 0; i < 3; i++) {\n              artists[num].popularSong[i] = res.tracks[i].name;\n              artists[num].albumLink[i] = res.tracks[i].album.external_urls.spotify;\n              artists[num].releaseDate[i] = res.tracks[i].album.release_date;\n              artists[num].previewSong[i] = res.tracks[i].preview_url;\n              artists[num].popularityOfSong[i] = res.tracks[i].popularity;\n              artists[num].albumImage[i] = res.tracks[i].album.images[0];\n            }\n          } else {\n            artists[num].popularSong[0] = res.tracks[0].name;\n            artists[num].albumLink[0] = res.tracks[0].album.external_urls.spotify;\n            artists[num].releaseDate[0] = res.tracks[0].album.release_date;\n            artists[num].previewSong[0] = res.tracks[0].preview_url;\n            artists[num].popularityOfSong[0] = res.tracks[0].popularity;\n            artists[num].albumImage[0] = res.tracks[0].album.images[0];\n          } //this.setState({artists:artists})\n          //*\n\n        } //this.state.artists[num].popularSong = res.tracks[0].name\n        ).then(function () {\n          return num++;\n        }); //.then(()=> console.log(this.state.artists[num]))\n        //.then(()=> console.log(this.state.artists))\n      } ///console.log('result'+result)\n\n\n      return this.setState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var artists;\n\n      if (this.state.artists.length !== 0) {\n        console.log(this.state.artists);\n        artists = this.state.artists.map(function (artist, i) {\n          console.log(artist.name, artist.popularSong);\n\n          if (artist.popularity < 40) {\n            return React.createElement(Artist, {\n              place: i + 1,\n              name: artist.name,\n              image: artist.images[0].url,\n              popularity: artist.popularity,\n              followers: artist.followers.total //ADDITIONAL INFO GOES UNDER\n              //song1 = {artist.popularSong[0]}\n              // song2 = {artist.popularSong[1]}\n              // song3 = {artist.popularSong[2]}\n              // image1 = {artist.albumImage[0]}\n              // image2 = {artist.albumImage[1]}\n              // image3 = {artist.albumImage[2]}\n              ,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 218\n              },\n              __self: this\n            });\n          } else {\n            return React.createElement(Artist, {\n              place: i + 1,\n              name: artist.name,\n              image: artist.images[0].url,\n              popularity: artist.popularity,\n              followers: artist.followers.total //ADDITIONAL INFO GOES UNDER\n              // song1 = {artist.popularSong[0]}\n              // song2 = {artist.popularSong[1]}\n              // song3 = {artist.popularSong[2]}\n              //image1 = {artist.albumImage[0]}\n              // image2 = {artist.albumImage[1]}\n              // image3 = {artist.albumImage[2]}\n              ,\n              lit: React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 253\n                },\n                __self: this\n              }, React.createElement(\"i\", {\n                class: \"fas fa-fire\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 253\n                },\n                __self: this\n              })),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 237\n              },\n              __self: this\n            });\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, artists);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/workspace/spotify/src/App.js"],"names":["React","Component","Artist","ids","App","props","state","artists","main","additional","accessToken","uploadedData","compare","bind","getArtistInfo","BASE_URL","URL","myOptions","fetch","then","res","json","setState","method","headers","mode","cache","console","log","sort","baseUrl1","baseUrl2","i","length","url","id","num","popularSong","albumLink","releaseDate","previewSong","popularityOfSong","albumImage","tracks","name","album","external_urls","spotify","release_date","preview_url","popularity","images","a","b","followersA","followers","total","followersB","comparison","map","artist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Artist from './Artist'\nimport './App.css';\nimport './Artist.css';\nimport ids from './AllLithuanianArtists'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    \n    this.state ={\n      artists: {\n        main:[],\n        additional:[]\n        },\n      accessToken: [],\n      uploadedData: false\n  \n}\nthis.compare = this.compare.bind(this)\nthis.getArtistInfo = this.getArtistInfo.bind(this)\n}\n    \n  \n    //componentWillMount(){\n      \n    //}\n    componentWillMount(){\n      \n    const BASE_URL = 'https://api.spotify.com/v1/artists?ids=';\n    const URL = BASE_URL+ids;\n    //spotify:artist:3sgAdiPhuvZrC1Di13TVbO spotify:artist:3jfKIjYYnAfdUW40Uragnd\n    //const access_token ='BQBfciHdxVpucrCXmmfz3GzTmqcMSSfx0IQg8Z_HlbG4jeXkiKGQZ5qtfLuDOO7AlBnEXvQ9rQR3j-LjaFpWzVz8JOMK90AOum1Y_W_iGyJjBj_ZVjth75JIEPVOCRFIGvMh4MsEsMV6LYv6E2me36O5PiXyGBmoqxBzGLYAU2PD4aSgRph7I5C6';\n    \n     var myOptions;\n    //   method: 'GET',\n    //   headers : {\n    //     'Authorization': 'Bearer'+this.state.accessToken.accessToken\n    //   },\n    //   mode: 'cors',\n    //   cache: 'default'\n    // }\n    \n    fetch('/api/todos')\n      .then(res=>res.json())\n      //.then(res=>console.log(res))\n      .then(accessToken=>this.setState({accessToken}))\n      //.then(()=>console.log(this.state.accessToken))\n      \n      .then(()=>(\n        myOptions = {\n          method: 'GET',\n          headers : {\n            'Authorization': 'Bearer '+this.state.accessToken.accessToken\n          },\n          mode: 'cors',\n          cache: 'default'\n        }\n      ))\n      .then(()=>console.log(myOptions))\n      .then(()=>fetch(URL, myOptions))\n      //fetch(URL, myOptions)\n      .then(res => res.json())\n      //.then(bug => console.log(bug))\n      .then(artists => artists.artists.sort(this.compare))\n      //.then(artists => this.setState({artists: {main: artists}, additional:[]}))\n      .then(artists =>{\n        const baseUrl1 = 'https://api.spotify.com/v1/artists/'\n        const baseUrl2 = '/top-tracks?country=LT';\n        const myOptions = {\n          method: 'GET',\n          headers : {\n            'Authorization': 'Bearer '+this.state.accessToken.accessToken\n          },\n          mode: 'cors',\n          cache: 'default'\n        }\n        for(var i=0; i<artists.length; i++){\n          //console.log(this.state.accessToken.accessToken)\n          let url = baseUrl1 + artists[i].id+ baseUrl2;\n          var num = 0;\n          \n            fetch(url, myOptions)\n            //.then((res)=>console.log(res))\n            .then(res=>res.json())\n            .then(res=>{\n              //console.log(res.tracks.length)\n              //*\n              artists[num].popularSong = [];\n              artists[num].albumLink = [];\n              artists[num].releaseDate = [];\n              artists[num].previewSong = [];\n              artists[num].popularityOfSong = [];\n              artists[num].albumImage = [];\n                if(res.tracks.length > 2){\n                  for(var i=0; i<3; i++){\n                    artists[num].popularSong[i] = res.tracks[i].name;\n                    artists[num].albumLink[i] = res.tracks[i].album.external_urls.spotify;\n                    artists[num].releaseDate[i] = res.tracks[i].album.release_date;\n                    artists[num].previewSong[i] = res.tracks[i].preview_url;\n                    artists[num].popularityOfSong[i] = res.tracks[i].popularity;\n                    artists[num].albumImage[i] = res.tracks[i].album.images[0];\n                  }\n                } else{\n                    artists[num].popularSong[0] = res.tracks[0].name;\n                    artists[num].albumLink[0] = res.tracks[0].album.external_urls.spotify;\n                    artists[num].releaseDate[0] = res.tracks[0].album.release_date;\n                    artists[num].previewSong[0] = res.tracks[0].preview_url;\n                    artists[num].popularityOfSong[0] = res.tracks[0].popularity;\n                    artists[num].albumImage[0] = res.tracks[0].album.images[0];\n                }\n              //this.setState({artists:artists})\n              //*\n            }\n            //this.state.artists[num].popularSong = res.tracks[0].name\n            )\n            .then(()=>num++)\n            \n            //.then(()=> console.log(this.state.artists[num]))\n            //.then(()=> console.log(this.state.artists))\n        }\n        \n        \n        \n      return artists;\n        \n      })\n      .then(() => console.log('comp did nioybt'+this.state.artists.main))\n      .then(()=>this.getArtistInfo())\n      .then((artists)=>this.setState({artists: artists}))\n      //.then(artists=>console.log(this.state.artists))\n      //.then(artists=>this.setState({artists:artists}))\n      //.then(()=>console.log(this.state.artists))\n      \n    }\n    \n    compare(a,b){\n      const followersA = a.followers.total;\n      const followersB = b.followers.total;\n      let comparison = 0;\n        if(followersA>followersB){\n          comparison = 1;\n        } else if(followersA<followersB){\n          comparison = -1;\n        }\n        return comparison*-1\n    }\n    getArtistInfo(){\n      const baseUrl1 = 'https://api.spotify.com/v1/artists/'\n      const baseUrl2 = '/top-tracks?country=LT';\n      const myOptions = {\n          method: 'GET',\n          headers : {\n            'Authorization': 'Bearer '+this.state.accessToken.accessToken\n          },\n          mode: 'cors',\n          cache: 'default'\n        }\n      const artists = this.state.artists;\n      for(var i=0; i<this.state.artists.length; i++){\n        //console.log(this.state.accessToken.accessToken)\n        let url = baseUrl1 + this.state.artists[i].id+ baseUrl2;\n        var num = 0;\n        \n          fetch(url, myOptions)\n          //.then((res)=>console.log(res))\n          .then(res=>res.json())\n          .then(res=>{\n            //console.log(res.tracks.length)\n            //*\n            artists[num].popularSong = [];\n            artists[num].albumLink = [];\n            artists[num].releaseDate = [];\n            artists[num].previewSong = [];\n            artists[num].popularityOfSong = [];\n            artists[num].albumImage = [];\n              if(res.tracks.length > 2){\n                for(var i=0; i<3; i++){\n                  artists[num].popularSong[i] = res.tracks[i].name;\n                  artists[num].albumLink[i] = res.tracks[i].album.external_urls.spotify;\n                  artists[num].releaseDate[i] = res.tracks[i].album.release_date;\n                  artists[num].previewSong[i] = res.tracks[i].preview_url;\n                  artists[num].popularityOfSong[i] = res.tracks[i].popularity;\n                  artists[num].albumImage[i] = res.tracks[i].album.images[0];\n                }\n              } else{\n                  artists[num].popularSong[0] = res.tracks[0].name;\n                  artists[num].albumLink[0] = res.tracks[0].album.external_urls.spotify;\n                  artists[num].releaseDate[0] = res.tracks[0].album.release_date;\n                  artists[num].previewSong[0] = res.tracks[0].preview_url;\n                  artists[num].popularityOfSong[0] = res.tracks[0].popularity;\n                  artists[num].albumImage[0] = res.tracks[0].album.images[0];\n              }\n            //this.setState({artists:artists})\n            //*\n          }\n          //this.state.artists[num].popularSong = res.tracks[0].name\n          )\n          .then(()=>num++)\n          \n          //.then(()=> console.log(this.state.artists[num]))\n          //.then(()=> console.log(this.state.artists))\n      }\n      ///console.log('result'+result)\n      return this.setState();\n      \n    }\n    \n      \n  render() {\n    let artists;\n    if(this.state.artists.length!==0){\n      console.log(this.state.artists)\n      artists = this.state.artists.map((artist,i) =>{\n        console.log(artist.name,artist.popularSong)\n        if(artist.popularity<40){\n        return(\n        <Artist\n        place ={i+1}\n        name = {artist.name}\n        image = {artist.images[0].url}\n        popularity = {artist.popularity}\n        followers = {artist.followers.total}\n        \n        //ADDITIONAL INFO GOES UNDER\n         //song1 = {artist.popularSong[0]}\n        // song2 = {artist.popularSong[1]}\n        // song3 = {artist.popularSong[2]}\n        \n        // image1 = {artist.albumImage[0]}\n        // image2 = {artist.albumImage[1]}\n        // image3 = {artist.albumImage[2]}\n        \n        />)\n        } else{\n        return(\n        <Artist\n        place ={i+1}\n        name = {artist.name}\n        image = {artist.images[0].url}\n        popularity = {artist.popularity}\n        followers = {artist.followers.total}\n        \n        //ADDITIONAL INFO GOES UNDER\n        // song1 = {artist.popularSong[0]}\n        // song2 = {artist.popularSong[1]}\n        // song3 = {artist.popularSong[2]}\n        \n         //image1 = {artist.albumImage[0]}\n        // image2 = {artist.albumImage[1]}\n        // image3 = {artist.albumImage[2]}\n        \n        lit = {<span><i class=\"fas fa-fire\"></i></span>}\n        />)\n        }\n        })\n        \n    }\n    return (\n      <div className='chart'>\n        {artists}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}